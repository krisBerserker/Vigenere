/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tpcrypto;

import java.util.Arrays;

/**
 *
 * @author Kris
 */
public class fenetreAcceuil extends javax.swing.JFrame {

    /**
     * Creates new form fenetreAcceuil
     */
    public fenetreAcceuil() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        message = new javax.swing.JTextField();
        cle = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        crypter = new javax.swing.JButton();
        decrypter = new javax.swing.JButton();
        crypte = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleActionPerformed(evt);
            }
        });

        jLabel1.setText("Message :");

        jLabel2.setText("Cle :");

        crypter.setText("crypter");
        crypter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crypterActionPerformed(evt);
            }
        });

        decrypter.setBackground(new java.awt.Color(204, 255, 0));
        decrypter.setText("decrypter");
        decrypter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrypterActionPerformed(evt);
            }
        });

        crypte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crypteActionPerformed(evt);
            }
        });

        jLabel3.setText("Message crypte :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(crypter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                        .addComponent(decrypter))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(cle)
                            .addComponent(crypte))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crypte, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crypter)
                    .addComponent(decrypter))
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crypterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crypterActionPerformed
        // TODO add your handling code here:
        String Tmessage = message.getText (),Tcle = cle.getText();
        String alphabet = "abcdefghijklmnopqrstuvwxyz 0123456789,.;'/:\"[]{}=+-_0)(*&^%$#@!~?><`";
        int Cmessage [] = new int [Tmessage.length()];
        int Ccle [] = new int [Tcle.length()];
        int Ccrypte [] = new int [Tmessage.length()];
        StringBuilder Tcrypte = new StringBuilder ();          
        int i,n = alphabet.length (),k = 0;
        
        // Conversion de la chaine de Message en chaine d'entier
        
        for (i =0; i < Tmessage.length();i++)
        {
            for (int j = 0; j < alphabet.length();j++)
            {
                if (Tmessage.charAt(i) == alphabet.charAt(j))
                {
                    Cmessage [i] = j ;
                }
            }
        }
        
        // Conversion de la chaine de cle en chaine d'entier
        
        for (i =0; i < Tcle.length();i++)
        {
            for (int j = 0; j < alphabet.length();j++)
            {
                
                if (Tcle.charAt(i) == alphabet.charAt(j))
                {
                    Ccle [i] = j ;
                }
            }
        }
        System.out.println(Arrays.toString (Cmessage));
        
        // creation du message chiffrÃ© en entier 
        
        for (i =0; i < Cmessage.length;i++)
        {
            if (k >= Ccle.length){ k = 0 ;}     
            
            Ccrypte [i] = (Cmessage [i] + Ccle [k])% n;
            k++;            
        }
        
        // conversion du Message crypte en chaine de caractere
        for (i =0; i < Ccrypte.length;i++)
        {
            Tcrypte.append(alphabet.charAt(Ccrypte[i]));
        }
        
        crypte.setText(Tcrypte.toString());
        
    }//GEN-LAST:event_crypterActionPerformed

    private void cleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cleActionPerformed

    private void crypteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crypteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_crypteActionPerformed

    private void decrypterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrypterActionPerformed
        // TODO add your handling code here:
        String TmessageCrypte = crypte.getText (),Tcle = cle.getText();
        String alphabet = "abcdefghijklmnopqrstuvwxyz 0123456789,.;'/:\"[]{}=+-_0)(*&^%$#@!~?><`";
        int CmessageCrypte [] = new int [TmessageCrypte.length()];
        int Ccle [] = new int [Tcle.length()];
        int Ccrypte [] = new int [TmessageCrypte.length()];
        StringBuilder Tcrypte = new StringBuilder ();          
        int i,n = alphabet.length (), k = 0;
        
        // Conversion de la chaine de Message Crypte en chaine d'entier
        
        for (i =0; i < TmessageCrypte.length();i++)
        {
            for (int j = 0; j < alphabet.length();j++)
            {
                if (TmessageCrypte.charAt(i) == alphabet.charAt(j))
                {
                    CmessageCrypte [i] = j ;
                }
            }
        }
        
        // Conversion de la chaine de cle en chaine d'entier
        
        for (i =0; i < Tcle.length();i++)
        {
            for (int j = 0; j < alphabet.length();j++)
            {
                if (Tcle.charAt(i) == alphabet.charAt(j))
                {
                    Ccle [i] = j ;
                }
            }
        }
        
        // creation du message en entier 
        
        for (i =0; i < CmessageCrypte.length;i++)
        {
            if (k >= Ccle.length){ k = 0 ;}     
                if ((CmessageCrypte [i] - Ccle [k]) >= 0)
                {
                Ccrypte [i] = (CmessageCrypte [i] - Ccle [k]);       
                }
                else 
                {
                    Ccrypte [i] = n + (CmessageCrypte [i] - Ccle [k]);                  
                }
            k++;            
        }
        
        // conversion du Message en chaine de caractere
        for (i =0; i < Ccrypte.length;i++)
        {
            Tcrypte.append(alphabet.charAt(Ccrypte[i]));
        }
        
        message.setText(Tcrypte.toString());
    }//GEN-LAST:event_decrypterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fenetreAcceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fenetreAcceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fenetreAcceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fenetreAcceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fenetreAcceuil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cle;
    private javax.swing.JTextField crypte;
    private javax.swing.JButton crypter;
    private javax.swing.JButton decrypter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField message;
    // End of variables declaration//GEN-END:variables
}
